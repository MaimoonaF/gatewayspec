{
    "openapi": "3.0.0",
    "paths": {
        "/api/login": {
            "post": {
                "operationId": "AuthController_login",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/otpVerify": {
            "post": {
                "operationId": "AuthController_otpVerify",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MFACredentials"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/registerWithOkta": {
            "post": {
                "operationId": "AuthController_registerWithOkta",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SentOtpArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/resendInviteLink": {
            "post": {
                "operationId": "AuthController_resendInviteLink",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/forgotPassword": {
            "post": {
                "operationId": "AuthController_forgotPassword",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/forgotUserName": {
            "post": {
                "operationId": "AuthController_forgotUserName",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/resetPassword": {
            "post": {
                "operationId": "AuthController_resetPassword",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/generateOtp": {
            "post": {
                "operationId": "AuthController_generateOtp",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateOtpInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/resetUsername": {
            "post": {
                "operationId": "AuthController_resetUsername",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetUsernameInputArg"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/users": {
            "post": {
                "operationId": "UserController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "UserController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "operationId": "UserController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "UserController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "UserController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/users/{id}/jobExecutions": {
            "get": {
                "operationId": "UserController_findManyJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobExecutionWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "UserController_connectJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "UserController_updateJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "UserController_disconnectJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/users/{id}/logs": {
            "get": {
                "operationId": "UserController_findManyLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "UserController_connectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "UserController_updateLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "UserController_disconnectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/restores": {
            "post": {
                "operationId": "RestoreController_createRestore",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestoreCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Restore"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "restores"
                ]
            },
            "get": {
                "operationId": "RestoreController_restores",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/RestoreWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Restore"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "restores"
                ]
            }
        },
        "/api/restores/{id}": {
            "get": {
                "operationId": "RestoreController_restore",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Restore"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "restores"
                ]
            },
            "patch": {
                "operationId": "RestoreController_updateRestore",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestoreUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Restore"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "restores"
                ]
            },
            "delete": {
                "operationId": "RestoreController_deleteRestore",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Restore"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "restores"
                ]
            }
        },
        "/api/organizations": {
            "post": {
                "operationId": "OrganizationController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "OrganizationController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrganizationWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/organizations/{id}": {
            "get": {
                "operationId": "OrganizationController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "OrganizationController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/organizations/{id}/users": {
            "get": {
                "operationId": "OrganizationController_findManyUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/UserWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "OrganizationController_connectUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "OrganizationController_updateUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "OrganizationController_disconnectUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/search": {
            "get": {
                "operationId": "DriveController_driveSearch",
                "parameters": [
                    {
                        "name": "name",
                        "required": true,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Drive"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives": {
            "post": {
                "operationId": "DriveController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriveCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drive"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "DriveController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/DriveWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Drive"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/{id}": {
            "get": {
                "operationId": "DriveController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drive"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriveUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drive"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drive"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/{id}/destination": {
            "get": {
                "operationId": "DriveController_findManyDestination",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "DriveController_connectDestination",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveController_updateDestination",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveController_disconnectDestination",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/{id}/driveUsers": {
            "get": {
                "operationId": "DriveController_findManyDriveUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/DriveUserWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "DriveController_connectDriveUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveController_updateDriveUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveController_disconnectDriveUsers",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/{id}/logs": {
            "get": {
                "operationId": "DriveController_findManyLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "DriveController_connectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveController_updateLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveController_disconnectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/{id}/source": {
            "get": {
                "operationId": "DriveController_findManySource",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "DriveController_connectSource",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveController_updateSource",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveController_disconnectSource",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/drives/createFolder": {
            "post": {
                "operationId": "DriveController_createFolder",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFolderArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "drives"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/driveUsers": {
            "post": {
                "operationId": "DriveUserController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriveUserCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DriveUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "driveUsers"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "DriveUserController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/DriveUserWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DriveUser"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "driveUsers"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/driveUsers/{id}": {
            "get": {
                "operationId": "DriveUserController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DriveUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "driveUsers"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "DriveUserController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriveUserUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DriveUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "driveUsers"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "DriveUserController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DriveUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "driveUsers"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobs": {
            "post": {
                "operationId": "JobController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "JobController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobs/{id}": {
            "get": {
                "operationId": "JobController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "JobController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "JobController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobs/{id}/jobExecutions": {
            "get": {
                "operationId": "JobController_findManyJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobExecutionWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "JobController_connectJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "JobController_updateJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "JobController_disconnectJobExecutions",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobs/{id}/logs": {
            "get": {
                "operationId": "JobController_findManyLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "JobController_connectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "JobController_updateLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "JobController_disconnectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/logs": {
            "post": {
                "operationId": "LogController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "LogController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Log"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/logs/{id}": {
            "get": {
                "operationId": "LogController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "LogController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "LogController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "logs"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/backups": {
            "post": {
                "operationId": "BackupController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackupCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backup"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "get": {
                "operationId": "BackupController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/BackupWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Backup"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backups"
                ]
            }
        },
        "/api/backups/{id}": {
            "get": {
                "operationId": "BackupController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "patch": {
                "operationId": "BackupController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackupUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "delete": {
                "operationId": "BackupController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backups"
                ]
            }
        },
        "/api/backups/{id}/backupFiles": {
            "get": {
                "operationId": "BackupController_findManyBackupFiles",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/BackupFileWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "post": {
                "operationId": "BackupController_connectBackupFiles",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "patch": {
                "operationId": "BackupController_updateBackupFiles",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backups"
                ]
            },
            "delete": {
                "operationId": "BackupController_disconnectBackupFiles",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "backups"
                ]
            }
        },
        "/api/backupFiles": {
            "post": {
                "operationId": "BackupFileController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackupFileCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupFile"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backupFiles"
                ]
            },
            "get": {
                "operationId": "BackupFileController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/BackupFileWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BackupFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backupFiles"
                ]
            }
        },
        "/api/backupFiles/{id}": {
            "get": {
                "operationId": "BackupFileController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupFile"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backupFiles"
                ]
            },
            "patch": {
                "operationId": "BackupFileController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackupFileUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupFile"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backupFiles"
                ]
            },
            "delete": {
                "operationId": "BackupFileController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupFile"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "backupFiles"
                ]
            }
        },
        "/api/jobExecutions": {
            "post": {
                "operationId": "JobExecutionController_create",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobExecutionCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobExecution"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "JobExecutionController_findMany",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/JobExecutionWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobExecution"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobExecutions/{id}": {
            "get": {
                "operationId": "JobExecutionController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobExecution"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "JobExecutionController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobExecutionUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobExecution"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "JobExecutionController_delete",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobExecution"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/jobExecutions/{id}/logs": {
            "get": {
                "operationId": "JobExecutionController_findManyLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "post": {
                "operationId": "JobExecutionController_connectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "JobExecutionController_updateLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "JobExecutionController_disconnectLogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobExecutions"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/notifications": {
            "post": {
                "operationId": "NotificationController_createNotification",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "get": {
                "operationId": "NotificationController_notifications",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/NotificationWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            }
        },
        "/api/notifications/{id}": {
            "get": {
                "operationId": "NotificationController_notification",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "patch": {
                "operationId": "NotificationController_updateNotification",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "delete": {
                "operationId": "NotificationController_deleteNotification",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            }
        },
        "/api/_health/live": {
            "get": {
                "operationId": "HealthController_healthLive",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/_health/ready": {
            "get": {
                "operationId": "HealthController_healthReady",
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/emailMaps": {
            "post": {
                "operationId": "EmailMapController_createEmailMap",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailMapCreateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailMap"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "emailMaps"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "get": {
                "operationId": "EmailMapController_emailMaps",
                "parameters": [
                    {
                        "name": "where",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/EmailMapWhereInput"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Array"
                        }
                    },
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "take",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailMap"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "emailMaps"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/emailMaps/{id}": {
            "get": {
                "operationId": "EmailMapController_emailMap",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailMap"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "emailMaps"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "patch": {
                "operationId": "EmailMapController_updateEmailMap",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailMapUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailMap"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "emailMaps"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            },
            "delete": {
                "operationId": "EmailMapController_deleteEmailMap",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailMap"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "emailMaps"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        },
        "/api/node/kubernetes/checking": {
            "post": {
                "operationId": "RcloneController_check",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetryUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/api/node/check/{username}": {
            "get": {
                "operationId": "RcloneController_usernameCheck",
                "parameters": [
                    {
                        "name": "username",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/api/node/rclone/webhook": {
            "post": {
                "operationId": "RcloneController_webhook",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RcloneWebhookInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobExecution"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/api/node/organization/create": {
            "post": {
                "operationId": "RcloneController_onboardOrganization",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardOrganizationInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/api/FileStores": {
            "post": {
                "operationId": "FileStoreController_upload",
                "summary": "Upload file",
                "parameters": [
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Upload file"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "FileStores"
                ],
                "security": [
                    {
                        "bearer": [
                        ]
                    }
                ]
            }
        }
    },
    "info": {
        "title": "gateway",
        "description": "\n\n## Congratulations! Your service resource is ready.\n  \nPlease note that all endpoints are secured with JWT Bearer authentication.\nBy default, your service resource comes with one user with the username \"admin\" and password \"admin\".\nLearn more in [our docs]()",
        "version": "1.0.0",
        "contact": {
        }
    },
    "tags": [
    ],
    "servers": [
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "Credentials": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "password"
                ]
            },
            "MFACredentials": {
                "type": "object",
                "properties": {
                    "oktaId": {
                        "type": "string"
                    },
                    "factorId": {
                        "type": "string"
                    },
                    "passCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "oktaId",
                    "factorId",
                    "passCode"
                ]
            },
            "SentOtpArg": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "EmailInputArg": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "ForbiddenException": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "statusCode",
                    "message"
                ]
            },
            "ResetPasswordInputArg": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    },
                    "oktaId": {
                        "type": "string"
                    },
                    "factorId": {
                        "type": "string"
                    },
                    "passCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "token",
                    "password",
                    "confirmPassword",
                    "oktaId",
                    "factorId",
                    "passCode"
                ]
            },
            "GenerateOtpInputArg": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "ResetUsernameInputArg": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "oktaId": {
                        "type": "string"
                    },
                    "factorId": {
                        "type": "string"
                    },
                    "passCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "token",
                    "username",
                    "oktaId",
                    "factorId",
                    "passCode"
                ]
            },
            "DriveWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "DriveUserWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "JobWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "OrganizationWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "JobExecutionWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "JobExecutionCreateNestedManyWithoutUsersInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    }
                }
            },
            "LogWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "LogCreateNestedManyWithoutUsersInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "UserCreateInput": {
                "type": "object",
                "properties": {
                    "createdDrives": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "driveUser": {
                        "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "oktaId": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "password": {
                        "type": "string"
                    },
                    "profileDetails": {
                        "type": "object"
                    },
                    "roles": {
                        "type": "string",
                        "enum": [
                            "superAdmin",
                            "admin",
                            "teamMember",
                            "API",
                            "user"
                        ]
                    },
                    "username": {
                        "type": "string"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionCreateNestedManyWithoutUsersInput"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogCreateNestedManyWithoutUsersInput"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "roles"
                ]
            },
            "DriveUser": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Owner",
                            "Editor",
                            "Viewer"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ]
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "required": [
                    "createdAt",
                    "drive",
                    "id",
                    "role",
                    "updatedAt",
                    "user"
                ]
            },
            "BackupFile": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/Backup"
                    },
                    "bytes": {
                        "type": "number"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "SrcToDst",
                            "DstToSrc"
                        ]
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "fileId": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "id"
                ]
            },
            "Restore": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/Backup"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/User"
                    },
                    "details": {
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "backup",
                    "createdAt",
                    "createdBy",
                    "id",
                    "status",
                    "updatedAt"
                ]
            },
            "Backup": {
                "type": "object",
                "properties": {
                    "backupFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFile"
                        }
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "fileCount": {
                        "type": "number"
                    },
                    "id": {
                        "type": "string"
                    },
                    "job": {
                        "$ref": "#/components/schemas/Job"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecution"
                    },
                    "note": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess"
                        ]
                    },
                    "restore": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Restore"
                        }
                    }
                },
                "required": [
                    "createdAt",
                    "id"
                ]
            },
            "Log": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isBackUp": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/Job"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecution"
                    },
                    "logNote": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Error",
                            "Warning",
                            "Info",
                            "Other"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "logType": {
                        "type": "string",
                        "enum": [
                            "Drive",
                            "Job",
                            "JobExecution",
                            "UserOnBoard",
                            "Alert",
                            "PermissionMapping"
                        ]
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "updatedAt"
                ]
            },
            "JobExecution": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "details": {
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    },
                    "job": {
                        "$ref": "#/components/schemas/Job"
                    },
                    "backups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Backup"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess",
                            "Scheduled",
                            "Cancelling"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/User"
                    },
                    "resyncInitiated": {
                        "type": "boolean"
                    },
                    "isResync": {
                        "type": "boolean"
                    },
                    "previousSyncId": {
                        "type": "string"
                    },
                    "copyDetails": {
                        "type": "object"
                    },
                    "jobRestartCount": {
                        "type": "number"
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "AToB",
                            "Bidirectional"
                        ]
                    }
                },
                "required": [
                    "createdAt",
                    "id"
                ]
            },
            "Alert": {
                "type": "object",
                "properties": {
                    "alertName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "job": {
                        "$ref": "#/components/schemas/Job"
                    },
                    "trigerStatus": {
                        "type": "string",
                        "enum": [
                            "JobFailed",
                            "JobCompleted"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "triggerCount": {
                        "type": "number"
                    }
                },
                "required": [
                    "alertName",
                    "createdAt",
                    "id",
                    "job",
                    "updatedAt",
                    "users",
                    "triggerCount"
                ]
            },
            "Job": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdByUser": {
                        "$ref": "#/components/schemas/User"
                    },
                    "details": {
                        "type": "object"
                    },
                    "source": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isBackup": {
                        "type": "boolean"
                    },
                    "jobExecutions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecution"
                        }
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "AToB",
                            "Bidirectional"
                        ]
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    },
                    "recurrence": {
                        "type": "string",
                        "enum": [
                            "Off",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Cancelled",
                            "Archived",
                            "Scheduled",
                            "OnHold",
                            "Completed"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "oneTimeExecution": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dailyExecutionTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "weeklyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "monthlyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alerts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    },
                    "lastSyncSuccess": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accessMappingAtoB": {
                        "type": "object"
                    },
                    "accessMappingBtoA": {
                        "type": "object"
                    },
                    "accessMappingSetting": {
                        "type": "object"
                    },
                    "jobCreatedFrom": {
                        "type": "string",
                        "enum": [
                            "DragAndDrop",
                            "CreateJob"
                        ]
                    },
                    "forcedOverwriteFile": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "createdAt",
                    "createdByUser",
                    "source",
                    "destination",
                    "id",
                    "isBackup",
                    "jobType",
                    "recurrence",
                    "updatedAt"
                ]
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "driveProviders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GoogleDrive",
                                "OneDrive",
                                "DropBox",
                                "AzureBlob",
                                "AmazonS3",
                                "Box",
                                "BackBlazeB2",
                                "OpenDrive",
                                "PCloud",
                                "CitrixShareFile",
                                "GoogleCloudStorage",
                                "SFTP",
                                "Storj",
                                "FTP",
                                "FTPS"
                            ]
                        }
                    },
                    "drives": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "limits": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "oktaOrgUrl": {
                        "type": "string"
                    },
                    "oktaToken": {
                        "type": "string"
                    },
                    "oktaClientId": {
                        "type": "string"
                    },
                    "backup": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    },
                    "deleteBackupAfterDays": {
                        "type": "number"
                    }
                },
                "required": [
                    "createdAt",
                    "driveProviders",
                    "id",
                    "name",
                    "updatedAt"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdDrives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Drive"
                        }
                    },
                    "driveUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUser"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "oktaId": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "profileDetails": {
                        "type": "object"
                    },
                    "roles": {
                        "type": "string",
                        "enum": [
                            "superAdmin",
                            "admin",
                            "teamMember",
                            "API",
                            "user"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "alerts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    },
                    "jobExecutions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecution"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                },
                "required": [
                    "createdAt",
                    "email",
                    "id",
                    "roles",
                    "updatedAt"
                ]
            },
            "StorageHistory": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "driveId": {
                        "type": "string"
                    },
                    "usedStorage": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "drive",
                    "driveId",
                    "usedStorage",
                    "id"
                ]
            },
            "Drive": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/User"
                    },
                    "source": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    },
                    "destination": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    },
                    "DriveProvider": {
                        "type": "string",
                        "enum": [
                            "GoogleDrive",
                            "OneDrive",
                            "DropBox",
                            "AzureBlob",
                            "AmazonS3",
                            "Box",
                            "BackBlazeB2",
                            "OpenDrive",
                            "PCloud",
                            "CitrixShareFile",
                            "GoogleCloudStorage",
                            "SFTP",
                            "Storj",
                            "FTP",
                            "FTPS"
                        ]
                    },
                    "driveUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUser"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "limits": {
                        "type": "object"
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "AuthenticationFailed"
                        ]
                    },
                    "redirectUrl": {
                        "type": "string"
                    },
                    "lastSyncSuccess": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastSync": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "StorageHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageHistory"
                        }
                    },
                    "backupStatus": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    }
                },
                "required": [
                    "createdAt",
                    "DriveProvider",
                    "id",
                    "name",
                    "organization",
                    "updatedAt"
                ]
            },
            "UserWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "JsonFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "$ref": "#/components/schemas/"
                    },
                    "not": {
                        "$ref": "#/components/schemas/"
                    }
                }
            },
            "StringFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "type": "string"
                    },
                    "in": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notIn": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lt": {
                        "type": "string"
                    },
                    "lte": {
                        "type": "string"
                    },
                    "gt": {
                        "type": "string"
                    },
                    "gte": {
                        "type": "string"
                    },
                    "contains": {
                        "type": "string"
                    },
                    "startsWith": {
                        "type": "string"
                    },
                    "endsWith": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "Default",
                            "Insensitive"
                        ]
                    },
                    "not": {
                        "type": "string"
                    }
                }
            },
            "BooleanFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "type": "boolean"
                    },
                    "not": {
                        "type": "boolean"
                    }
                }
            },
            "BooleanNullableFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "type": "boolean"
                    },
                    "not": {
                        "type": "boolean"
                    }
                }
            },
            "LogStatusFilter": {
                "type": "object",
                "properties": {
                    "in": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "DateTimeFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "not": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "in": {
                        "type": "array",
                        "items": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "notIn": {
                        "type": "array",
                        "items": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "lt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lte": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gte": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "PermissionFilter": {
                "type": "object",
                "properties": {
                    "has": {
                        "type": "string",
                        "enum": [
                            "createOrganization",
                            "updateOrganization",
                            "createUser",
                            "updateUser",
                            "resendInvite",
                            "updateUserOwn",
                            "createDrive",
                            "updateDrive",
                            "listDrive",
                            "listActivityLog",
                            "report",
                            "createJob",
                            "listJob",
                            "updateJob",
                            "createDriveUser",
                            "listDriveUser",
                            "updateDriveUser",
                            "deleteDriveUser",
                            "createAlert",
                            "updateAlert",
                            "listAlert",
                            "deleteAlert"
                        ]
                    }
                }
            },
            "DriveUserWhereInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Owner",
                            "Editor",
                            "Viewer"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionFilter"
                    }
                }
            },
            "DriveUserListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/DriveUserWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/DriveUserWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/DriveUserWhereInput"
                    }
                }
            },
            "StringNullableFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "type": "string"
                    },
                    "in": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notIn": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lt": {
                        "type": "string"
                    },
                    "lte": {
                        "type": "string"
                    },
                    "gt": {
                        "type": "string"
                    },
                    "gte": {
                        "type": "string"
                    },
                    "contains": {
                        "type": "string"
                    },
                    "startsWith": {
                        "type": "string"
                    },
                    "endsWith": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "Default",
                            "Insensitive"
                        ]
                    },
                    "not": {
                        "type": "string"
                    }
                }
            },
            "UserWhereInput": {
                "type": "object",
                "properties": {
                    "createdDrives": {
                        "$ref": "#/components/schemas/DriveListRelationFilter"
                    },
                    "driveUser": {
                        "$ref": "#/components/schemas/DriveUserListRelationFilter"
                    },
                    "email": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "firstName": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/JobListRelationFilter"
                    },
                    "lastName": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "oktaId": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "profileDetails": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "username": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionListRelationFilter"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogListRelationFilter"
                    },
                    "roles": {
                        "type": "string",
                        "enum": [
                            "superAdmin",
                            "admin",
                            "teamMember",
                            "API",
                            "user"
                        ]
                    },
                    "isAccountCreated": {
                        "$ref": "#/components/schemas/BooleanFilter"
                    }
                }
            },
            "LogWhereInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "isBackUp": {
                        "$ref": "#/components/schemas/BooleanNullableFilter"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "logNote": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "status": {
                        "$ref": "#/components/schemas/LogStatusFilter"
                    },
                    "logType": {
                        "type": "string",
                        "enum": [
                            "Drive",
                            "Job",
                            "JobExecution",
                            "UserOnBoard",
                            "Alert",
                            "PermissionMapping"
                        ]
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/DateTimeFilter"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereInput"
                    },
                    "OR": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereInput"
                        }
                    },
                    "driveId": {
                        "$ref": "#/components/schemas/StringFilter"
                    }
                }
            },
            "LogListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/LogWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/LogWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/LogWhereInput"
                    }
                }
            },
            "JobExecutionWhereInput": {
                "type": "object",
                "properties": {
                    "details": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereInput"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogListRelationFilter"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess",
                            "Scheduled",
                            "Cancelling"
                        ]
                    },
                    "driveId": {
                        "type": "string"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/DateTimeFilter"
                    },
                    "featureJobExecutions": {
                        "type": "boolean"
                    },
                    "statusFilter": {
                        "$ref": "#/components/schemas/StringFilter"
                    }
                }
            },
            "JobExecutionListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/JobExecutionWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/JobExecutionWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/JobExecutionWhereInput"
                    }
                }
            },
            "DateTimeNullableFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "in": {
                        "type": "array",
                        "items": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "notIn": {
                        "type": "array",
                        "items": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "lt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lte": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gte": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "not": {
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "JobWhereInput": {
                "type": "object",
                "properties": {
                    "createdByUser": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "details": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "isBackup": {
                        "$ref": "#/components/schemas/BooleanFilter"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionListRelationFilter"
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "AToB",
                            "Bidirectional"
                        ]
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogListRelationFilter"
                    },
                    "recurrence": {
                        "type": "string",
                        "enum": [
                            "Off",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "start": {
                        "$ref": "#/components/schemas/DateTimeNullableFilter"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Cancelled",
                            "Archived",
                            "Scheduled",
                            "OnHold",
                            "Completed"
                        ]
                    },
                    "OR": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobWhereInput"
                        }
                    },
                    "jobCreatedFrom": {
                        "type": "string",
                        "enum": [
                            "DragAndDrop",
                            "CreateJob"
                        ]
                    },
                    "Source": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "Destination": {
                        "$ref": "#/components/schemas/StringFilter"
                    }
                }
            },
            "JobListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/JobWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/JobWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/JobWhereInput"
                    }
                }
            },
            "DriveWhereInput": {
                "type": "object",
                "properties": {
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "source": {
                        "$ref": "#/components/schemas/JobListRelationFilter"
                    },
                    "DriveProvider": {
                        "type": "string",
                        "enum": [
                            "GoogleDrive",
                            "OneDrive",
                            "DropBox",
                            "AzureBlob",
                            "AmazonS3",
                            "Box",
                            "BackBlazeB2",
                            "OpenDrive",
                            "PCloud",
                            "CitrixShareFile",
                            "GoogleCloudStorage",
                            "SFTP",
                            "Storj",
                            "FTP",
                            "FTPS"
                        ]
                    },
                    "driveUsers": {
                        "$ref": "#/components/schemas/DriveUserListRelationFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/JobListRelationFilter"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogListRelationFilter"
                    },
                    "name": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "AuthenticationFailed"
                        ]
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/DateTimeFilter"
                    }
                }
            },
            "DriveListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/DriveWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/DriveWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/DriveWhereInput"
                    }
                }
            },
            "Array": {
                "type": "object",
                "properties": {
                }
            },
            "Number": {
                "type": "object",
                "properties": {
                }
            },
            "NotFoundException": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "statusCode",
                    "message"
                ]
            },
            "JobExecutionUpdateManyWithoutUsersInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    }
                }
            },
            "LogUpdateManyWithoutUsersInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "UserUpdateInput": {
                "type": "object",
                "properties": {
                    "createdDrives": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "driveUser": {
                        "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "oktaId": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "password": {
                        "type": "string"
                    },
                    "profileDetails": {
                        "type": "object"
                    },
                    "roles": {
                        "type": "string",
                        "enum": [
                            "superAdmin",
                            "admin",
                            "teamMember",
                            "API",
                            "user"
                        ]
                    },
                    "username": {
                        "type": "string"
                    },
                    "isAccountCreated": {
                        "type": "boolean"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionUpdateManyWithoutUsersInput"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogUpdateManyWithoutUsersInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Deactive"
                        ]
                    }
                }
            },
            "BackupWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "BackupFileDetails": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileId": {
                        "type": "string"
                    }
                },
                "required": [
                    "path",
                    "fileName",
                    "fileId"
                ]
            },
            "RestoreCreateInput": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/BackupWhereUniqueInput"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "details": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress"
                        ]
                    },
                    "restorePath": {
                        "type": "string"
                    },
                    "fileDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFileDetails"
                        }
                    }
                },
                "required": [
                    "backup",
                    "status"
                ]
            },
            "RestoreStatusFilter": {
                "type": "object",
                "properties": {
                    "in": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RestoreWhereInput": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/BackupWhereUniqueInput"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "details": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RestoreStatusFilter"
                    }
                }
            },
            "RestoreUpdateInput": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_queue",
                            "processing",
                            "successful",
                            "partially_successful",
                            "failed",
                            "canceled"
                        ]
                    },
                    "error": {
                        "type": "string"
                    },
                    "details": {
                        "type": "object"
                    },
                    "transfers": {
                        "type": "object"
                    }
                },
                "required": [
                    "status",
                    "error"
                ]
            },
            "UserCreateNestedManyWithoutOrganizationsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWhereUniqueInput"
                        }
                    }
                }
            },
            "OrganizationCreateInput": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "drives": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "driveProviders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GoogleDrive",
                                "OneDrive",
                                "DropBox",
                                "AzureBlob",
                                "AmazonS3",
                                "Box",
                                "BackBlazeB2",
                                "OpenDrive",
                                "PCloud",
                                "CitrixShareFile",
                                "GoogleCloudStorage",
                                "SFTP",
                                "Storj",
                                "FTP",
                                "FTPS"
                            ]
                        }
                    },
                    "limits": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "$ref": "#/components/schemas/UserCreateNestedManyWithoutOrganizationsInput"
                    },
                    "oktaOrgUrl": {
                        "type": "string"
                    },
                    "oktaToken": {
                        "type": "string"
                    },
                    "oktaClientId": {
                        "type": "string"
                    },
                    "backup": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    },
                    "deleteBackupAfterDays": {
                        "type": "number",
                        "default": 30
                    }
                },
                "required": [
                    "driveProviders",
                    "limits",
                    "name",
                    "oktaOrgUrl",
                    "oktaToken",
                    "oktaClientId"
                ]
            },
            "UserListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/UserWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/UserWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/UserWhereInput"
                    }
                }
            },
            "OrganizationWhereInput": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "drives": {
                        "$ref": "#/components/schemas/DriveListRelationFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/JsonFilter"
                    },
                    "name": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "users": {
                        "$ref": "#/components/schemas/UserListRelationFilter"
                    }
                }
            },
            "UserUpdateManyWithoutOrganizationsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWhereUniqueInput"
                        }
                    }
                }
            },
            "OrganizationUpdateInput": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "driveProviders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GoogleDrive",
                                "OneDrive",
                                "DropBox",
                                "AzureBlob",
                                "AmazonS3",
                                "Box",
                                "BackBlazeB2",
                                "OpenDrive",
                                "PCloud",
                                "CitrixShareFile",
                                "GoogleCloudStorage",
                                "SFTP",
                                "Storj",
                                "FTP",
                                "FTPS"
                            ]
                        }
                    },
                    "drives": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "limits": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "$ref": "#/components/schemas/UserUpdateManyWithoutOrganizationsInput"
                    },
                    "oktaOrgUrl": {
                        "type": "string"
                    },
                    "oktaToken": {
                        "type": "string"
                    },
                    "oktaClientId": {
                        "type": "string"
                    },
                    "backup": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    }
                }
            },
            "String": {
                "type": "object",
                "properties": {
                }
            },
            "JobCreateNestedManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobWhereUniqueInput"
                        }
                    }
                }
            },
            "DriveUserCreateNestedManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                        }
                    }
                }
            },
            "LogCreateNestedManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "DriveCreateInput": {
                "type": "object",
                "properties": {
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "source": {
                        "$ref": "#/components/schemas/JobCreateNestedManyWithoutDrivesInput"
                    },
                    "DriveProvider": {
                        "type": "string",
                        "enum": [
                            "GoogleDrive",
                            "OneDrive",
                            "DropBox",
                            "AzureBlob",
                            "AmazonS3",
                            "Box",
                            "BackBlazeB2",
                            "OpenDrive",
                            "PCloud",
                            "CitrixShareFile",
                            "GoogleCloudStorage",
                            "SFTP",
                            "Storj",
                            "FTP",
                            "FTPS"
                        ]
                    },
                    "driveUsers": {
                        "$ref": "#/components/schemas/DriveUserCreateNestedManyWithoutDrivesInput"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/JobCreateNestedManyWithoutDrivesInput"
                    },
                    "limits": {
                        "type": "object"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogCreateNestedManyWithoutDrivesInput"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "backupStatus": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    }
                },
                "required": [
                    "DriveProvider",
                    "name",
                    "organization"
                ]
            },
            "JobUpdateManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobWhereUniqueInput"
                        }
                    }
                }
            },
            "DriveUserUpdateManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DriveUserWhereUniqueInput"
                        }
                    }
                }
            },
            "LogUpdateManyWithoutDrivesInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "DriveUpdateInput": {
                "type": "object",
                "properties": {
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "source": {
                        "$ref": "#/components/schemas/JobUpdateManyWithoutDrivesInput"
                    },
                    "DriveProvider": {
                        "type": "string",
                        "enum": [
                            "GoogleDrive",
                            "OneDrive",
                            "DropBox",
                            "AzureBlob",
                            "AmazonS3",
                            "Box",
                            "BackBlazeB2",
                            "OpenDrive",
                            "PCloud",
                            "CitrixShareFile",
                            "GoogleCloudStorage",
                            "SFTP",
                            "Storj",
                            "FTP",
                            "FTPS"
                        ]
                    },
                    "driveUsers": {
                        "$ref": "#/components/schemas/DriveUserUpdateManyWithoutDrivesInput"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/JobUpdateManyWithoutDrivesInput"
                    },
                    "limits": {
                        "type": "object"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogUpdateManyWithoutDrivesInput"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "AuthenticationFailed"
                        ]
                    },
                    "backupStatus": {
                        "type": "string",
                        "enum": [
                            "mandatory",
                            "optional",
                            "disabled"
                        ]
                    }
                }
            },
            "CreateFolderArgs": {
                "type": "object",
                "properties": {
                    "driveId": {
                        "type": "string"
                    },
                    "remote": {
                        "type": "string"
                    },
                    "createAsync": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "driveId",
                    "remote"
                ]
            },
            "DriveUserCreateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Owner",
                            "Editor",
                            "Viewer"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                },
                "required": [
                    "drive",
                    "role"
                ]
            },
            "DriveUserUpdateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "Owner",
                            "Editor",
                            "Viewer"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "JobExecutionCreateNestedManyWithoutJobsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    }
                }
            },
            "LogCreateNestedManyWithoutJobsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "UserCreateNestedManyWithoutAlertsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserWhereUniqueInput"
                        }
                    }
                }
            },
            "AlertCreateInput": {
                "type": "object",
                "properties": {
                    "alertName": {
                        "type": "string"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "trigerStatus": {
                        "type": "string",
                        "enum": [
                            "JobFailed",
                            "JobCompleted"
                        ]
                    },
                    "users": {
                        "$ref": "#/components/schemas/UserCreateNestedManyWithoutAlertsInput"
                    }
                },
                "required": [
                    "alertName",
                    "trigerStatus",
                    "users"
                ]
            },
            "AlertCreateWithoutJobInput": {
                "type": "object",
                "properties": {
                    "create": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertCreateInput"
                        }
                    }
                }
            },
            "AccessMapping": {
                "type": "object",
                "properties": {
                    "isFolderAccessMappings": {
                        "type": "boolean"
                    },
                    "isFileLevelAccessMapping": {
                        "type": "boolean"
                    },
                    "fileLevelPermissionMap": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "folderLevelPermissionMap": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "isFolderAccessMappings",
                    "isFileLevelAccessMapping"
                ]
            },
            "RoleMappingData": {
                "type": "object",
                "properties": {
                    "folderFilePermission": {
                        "type": "string",
                        "enum": [
                            "NotApplicable",
                            "Apply permission configuration only for the files",
                            "Apply permission configuration only for the folders",
                            "Apply permission configuration for both files and folders"
                        ]
                    },
                    "assetSetting": {
                        "type": "string",
                        "enum": [
                            "NotApplicable",
                            "Apply the permission configuration only for the new items added to the drive",
                            "Apply the permission configuration only to the existing items that have been updated on the drive",
                            "Apply the permission configuration for both new items and existing items that have been updated on the drive"
                        ]
                    },
                    "appendRemoveUserSetting": {
                        "type": "string",
                        "enum": [
                            "NotApplicable",
                            "Append users to the new role list in the destination drive",
                            "Remove users from the role list on the destination drive",
                            "Append and remove users from the role list on the destination drive"
                        ]
                    },
                    "upgradeDowngradeUserSetting": {
                        "type": "string",
                        "enum": [
                            "NotApplicable",
                            "Only upgrade user roles",
                            "Only downgrade user roles",
                            "Do upgrade and downgrade user roles"
                        ]
                    },
                    "driveSelectionSetting": {
                        "type": "string",
                        "enum": [
                            "NotApplicable",
                            "Apply Permission configuration only to Drive-1",
                            "Apply Permission configuration only to Drive-2",
                            "Apply Permission configuration only to Drive-1 and Drive-2"
                        ]
                    }
                },
                "required": [
                    "folderFilePermission",
                    "assetSetting",
                    "appendRemoveUserSetting",
                    "upgradeDowngradeUserSetting",
                    "driveSelectionSetting"
                ]
            },
            "JobCreateInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "createdByUser": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "details": {
                        "type": "object"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isBackup": {
                        "type": "boolean"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionCreateNestedManyWithoutJobsInput"
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "AToB",
                            "Bidirectional"
                        ]
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogCreateNestedManyWithoutJobsInput"
                    },
                    "recurrence": {
                        "type": "string",
                        "enum": [
                            "Off",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "end": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Cancelled",
                            "Archived",
                            "Scheduled",
                            "OnHold",
                            "Completed"
                        ]
                    },
                    "oneTimeExecution": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dailyExecutionTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "weeklyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "monthlyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alerts": {
                        "$ref": "#/components/schemas/AlertCreateWithoutJobInput"
                    },
                    "accessMappingAtoB": {
                        "$ref": "#/components/schemas/AccessMapping"
                    },
                    "accessMappingBtoA": {
                        "$ref": "#/components/schemas/AccessMapping"
                    },
                    "accessMappingSetting": {
                        "$ref": "#/components/schemas/RoleMappingData"
                    },
                    "manualPermissionMapping": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "forcedOverwriteFile": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "createdByUser",
                    "source",
                    "destination",
                    "isBackup",
                    "jobType",
                    "recurrence"
                ]
            },
            "JobExecutionUpdateManyWithoutJobsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                        }
                    }
                }
            },
            "LogUpdateManyWithoutJobsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "JobUpdateInput": {
                "type": "object",
                "properties": {
                    "createdByUser": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "details": {
                        "type": "object"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isBackup": {
                        "type": "boolean"
                    },
                    "jobExecutions": {
                        "$ref": "#/components/schemas/JobExecutionUpdateManyWithoutJobsInput"
                    },
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "AToB",
                            "Bidirectional"
                        ]
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogUpdateManyWithoutJobsInput"
                    },
                    "recurrence": {
                        "type": "string",
                        "enum": [
                            "Off",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive",
                            "Cancelled",
                            "Archived",
                            "Scheduled",
                            "OnHold",
                            "Completed"
                        ]
                    },
                    "oneTimeExecution": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dailyExecutionTime": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "weeklyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "monthlyExecutionDetails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "accessMappingAtoB": {
                        "$ref": "#/components/schemas/AccessMapping"
                    },
                    "accessMappingBtoA": {
                        "$ref": "#/components/schemas/AccessMapping"
                    },
                    "accessMappingSetting": {
                        "$ref": "#/components/schemas/RoleMappingData"
                    },
                    "forcedOverwriteFile": {
                        "type": "boolean"
                    }
                }
            },
            "LogCreateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isBackUp": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "logNote": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Error",
                            "Warning",
                            "Info",
                            "Other"
                        ]
                    },
                    "logType": {
                        "type": "string",
                        "enum": [
                            "Drive",
                            "Job",
                            "JobExecution",
                            "UserOnBoard",
                            "Alert",
                            "PermissionMapping"
                        ]
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "LogUpdateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isBackUp": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "logNote": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Error",
                            "Warning",
                            "Info",
                            "Other"
                        ]
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "BackupFileWhereUniqueInput": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "BackupFileCreateNestedManyWithoutBackupsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFileWhereUniqueInput"
                        }
                    }
                }
            },
            "BackupCreateInput": {
                "type": "object",
                "properties": {
                    "backupFiles": {
                        "$ref": "#/components/schemas/BackupFileCreateNestedManyWithoutBackupsInput"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "fileCount": {
                        "type": "number"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess"
                        ]
                    }
                }
            },
            "FloatNullableFilter": {
                "type": "object",
                "properties": {
                    "equals": {
                        "type": "number"
                    },
                    "in": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "notIn": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "lt": {
                        "type": "number"
                    },
                    "lte": {
                        "type": "number"
                    },
                    "gt": {
                        "type": "number"
                    },
                    "gte": {
                        "type": "number"
                    },
                    "not": {
                        "type": "number"
                    }
                }
            },
            "BackupFileWhereInput": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/BackupWhereUniqueInput"
                    },
                    "bytes": {
                        "$ref": "#/components/schemas/FloatNullableFilter"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "lastModified": {
                        "$ref": "#/components/schemas/DateTimeNullableFilter"
                    },
                    "mimeType": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "name": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "path": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    }
                }
            },
            "BackupFileListRelationFilter": {
                "type": "object",
                "properties": {
                    "every": {
                        "$ref": "#/components/schemas/BackupFileWhereInput"
                    },
                    "some": {
                        "$ref": "#/components/schemas/BackupFileWhereInput"
                    },
                    "none": {
                        "$ref": "#/components/schemas/BackupFileWhereInput"
                    }
                }
            },
            "BackupWhereInput": {
                "type": "object",
                "properties": {
                    "backupFiles": {
                        "$ref": "#/components/schemas/BackupFileListRelationFilter"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "fileCount": {
                        "$ref": "#/components/schemas/FloatNullableFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "size": {
                        "$ref": "#/components/schemas/FloatNullableFilter"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess"
                        ]
                    }
                }
            },
            "BackupFileUpdateManyWithoutBackupsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFileWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFileWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupFileWhereUniqueInput"
                        }
                    }
                }
            },
            "BackupUpdateInput": {
                "type": "object",
                "properties": {
                    "backupFiles": {
                        "$ref": "#/components/schemas/BackupFileUpdateManyWithoutBackupsInput"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "fileCount": {
                        "type": "number"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess"
                        ]
                    }
                }
            },
            "BackupFileCreateInput": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/BackupWhereUniqueInput"
                    },
                    "bytes": {
                        "type": "number"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "BackupFileUpdateInput": {
                "type": "object",
                "properties": {
                    "backup": {
                        "$ref": "#/components/schemas/BackupWhereUniqueInput"
                    },
                    "bytes": {
                        "type": "number"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "JobCreateUniqueInput": {
                "type": "object",
                "properties": {
                    "create": {
                        "$ref": "#/components/schemas/JobCreateInput"
                    }
                },
                "required": [
                    "create"
                ]
            },
            "LogCreateNestedManyWithoutJobExecutionsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "JobExecutionCreateInput": {
                "type": "object",
                "properties": {
                    "details": {
                        "type": "object"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobCreate": {
                        "$ref": "#/components/schemas/JobCreateUniqueInput"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogCreateNestedManyWithoutJobExecutionsInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess",
                            "Scheduled",
                            "Cancelling"
                        ]
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    },
                    "isResync": {
                        "type": "boolean"
                    },
                    "previousSyncId": {
                        "type": "string"
                    },
                    "copyDetails": {
                        "type": "object"
                    }
                }
            },
            "LogUpdateManyWithoutJobExecutionsInput": {
                "type": "object",
                "properties": {
                    "connect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "disconnect": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    },
                    "set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogWhereUniqueInput"
                        }
                    }
                }
            },
            "JobExecutionUpdateInput": {
                "type": "object",
                "properties": {
                    "details": {
                        "type": "object"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogUpdateManyWithoutJobExecutionsInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess",
                            "Scheduled",
                            "Cancelling"
                        ]
                    },
                    "backupFilesDst": {
                        "$ref": "#/components/schemas/BackupCreateInput"
                    },
                    "backupFilesSrc": {
                        "$ref": "#/components/schemas/BackupCreateInput"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "NotificationCreateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isRead": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "type": "string"
                    },
                    "notificationType": {
                        "type": "string",
                        "enum": [
                            "NotAnAlert",
                            "DriveAuthFail",
                            "DriveNameChanged",
                            "DriveStatusChanged",
                            "StorageFull",
                            "JobFailed",
                            "JobCompleted",
                            "DriveUser",
                            "DriveAlert",
                            "JobAlert"
                        ]
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning",
                            "Info",
                            "Success",
                            "Other"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                },
                "required": [
                    "isRead",
                    "note",
                    "status",
                    "user"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "drive": {
                        "$ref": "#/components/schemas/Drive"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isRead": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/Job"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecution"
                    },
                    "note": {
                        "type": "string"
                    },
                    "notificationType": {
                        "type": "string",
                        "enum": [
                            "NotAnAlert",
                            "DriveAuthFail",
                            "DriveNameChanged",
                            "DriveStatusChanged",
                            "StorageFull",
                            "JobFailed",
                            "JobCompleted",
                            "DriveUser",
                            "DriveAlert",
                            "JobAlert"
                        ]
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning",
                            "Info",
                            "Success",
                            "Other"
                        ]
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "isRead",
                    "note",
                    "status",
                    "updatedAt",
                    "user"
                ]
            },
            "NotificationWhereInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "isRead": {
                        "$ref": "#/components/schemas/BooleanFilter"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "notificationType": {
                        "type": "string",
                        "enum": [
                            "NotAnAlert",
                            "DriveAuthFail",
                            "DriveNameChanged",
                            "DriveStatusChanged",
                            "StorageFull",
                            "JobFailed",
                            "JobCompleted",
                            "DriveUser",
                            "DriveAlert",
                            "JobAlert"
                        ]
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning",
                            "Info",
                            "Success",
                            "Other"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "NotificationUpdateInput": {
                "type": "object",
                "properties": {
                    "drive": {
                        "$ref": "#/components/schemas/DriveWhereUniqueInput"
                    },
                    "isRead": {
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobWhereUniqueInput"
                    },
                    "jobExecution": {
                        "$ref": "#/components/schemas/JobExecutionWhereUniqueInput"
                    },
                    "note": {
                        "type": "string"
                    },
                    "notificationType": {
                        "type": "string",
                        "enum": [
                            "NotAnAlert",
                            "DriveAuthFail",
                            "DriveNameChanged",
                            "DriveStatusChanged",
                            "StorageFull",
                            "JobFailed",
                            "JobCompleted",
                            "DriveUser",
                            "DriveAlert",
                            "JobAlert"
                        ]
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning",
                            "Info",
                            "Success",
                            "Other"
                        ]
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserWhereUniqueInput"
                    }
                }
            },
            "EmailMapCreateInput": {
                "type": "object",
                "properties": {
                    "box": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "gDrive": {
                        "type": "string"
                    },
                    "oneDrive": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "thumbnail": {
                        "type": "string"
                    }
                }
            },
            "EmailMap": {
                "type": "object",
                "properties": {
                    "box": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "gDrive": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "oneDrive": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "thumbnail": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "id",
                    "organization",
                    "updatedAt"
                ]
            },
            "EmailMapWhereInput": {
                "type": "object",
                "properties": {
                    "box": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "fullName": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "gDrive": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "id": {
                        "$ref": "#/components/schemas/StringFilter"
                    },
                    "oneDrive": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/StringNullableFilter"
                    }
                }
            },
            "EmailMapUpdateInput": {
                "type": "object",
                "properties": {
                    "box": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "gDrive": {
                        "type": "string"
                    },
                    "oneDrive": {
                        "type": "string"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
                    },
                    "thumbnail": {
                        "type": "string"
                    }
                }
            },
            "RCloneUpdateInput": {
                "type": "object",
                "properties": {
                    "details": {
                        "type": "object"
                    },
                    "transferredSource": {
                        "type": "object"
                    },
                    "transfers": {
                        "type": "object"
                    },
                    "backUpSource": {
                        "type": "object"
                    },
                    "backUpDestination": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_queue",
                            "processing",
                            "successful",
                            "partially_successful",
                            "failed",
                            "canceled"
                        ]
                    },
                    "backUpDestinationFile": {
                        "type": "string"
                    },
                    "backUpSourceFile": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "object"
                    }
                },
                "required": [
                    "status",
                    "backUpSourceFile"
                ]
            },
            "RetryUpdateInput": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success",
                            "Failed",
                            "OnProgress",
                            "Canceled",
                            "PartialSuccess",
                            "Scheduled",
                            "Cancelling"
                        ]
                    },
                    "details": {
                        "type": "object"
                    },
                    "transfers": {
                        "type": "object"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "TransferDetailsInput": {
                "type": "object",
                "properties": {
                    "bytes": {
                        "type": "number"
                    },
                    "duration": {
                        "type": "number"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "jobError": {
                        "type": "string"
                    },
                    "numberOfErrors": {
                        "type": "number"
                    },
                    "skippedFiles": {
                        "type": "number"
                    },
                    "syncedFiles": {
                        "type": "number"
                    }
                },
                "required": [
                    "bytes",
                    "duration",
                    "endTime",
                    "errors",
                    "jobError",
                    "numberOfErrors",
                    "skippedFiles",
                    "syncedFiles"
                ]
            },
            "BackupDetailsInput": {
                "type": "object",
                "properties": {
                    "backupSrcFsPath": {
                        "type": "string"
                    },
                    "backupDstFsPath": {
                        "type": "string"
                    }
                },
                "required": [
                    "backupSrcFsPath",
                    "backupDstFsPath"
                ]
            },
            "RcloneWebhookInput": {
                "type": "object",
                "properties": {
                    "dstFs": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "runId": {
                        "type": "string"
                    },
                    "srcFs": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "transferDetails": {
                        "$ref": "#/components/schemas/TransferDetailsInput"
                    },
                    "backupDetails": {
                        "$ref": "#/components/schemas/BackupDetailsInput"
                    },
                    "type": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "object"
                    },
                    "dstFsName": {
                        "type": "string"
                    },
                    "srcFsName": {
                        "type": "string"
                    }
                },
                "required": [
                    "dstFs",
                    "endTime",
                    "id",
                    "runId",
                    "srcFs",
                    "startTime",
                    "status",
                    "transferDetails",
                    "backupDetails",
                    "type",
                    "dstFsName",
                    "srcFsName"
                ]
            },
            "OnboardOrganizationInput": {
                "type": "object",
                "properties": {
                    "orgName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    }
                },
                "required": [
                    "orgName",
                    "email"
                ]
            },
            "UploadFileDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "file"
                ]
            }
        }
    }
}